/*
 * Copyright (c) 2021 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>

#define DEFAULT 0
#define UTIL   1
#define SYMNUM   2
#define FUNC   3

&sk {
    release-after-ms = <1500>;
	quick-release;
    ignore-modifiers;
};

&sl {
    release-after-ms = <1500>;
};

&mt {
    tapping-term-ms = <300>;
};




#define DE_UDIA LBRC // Ü
#define DE_PLUS RBRC // +
#define DE_ODIA SEMI // Ö
#define DE_ADIA APOS // Ä
#define DE_HASH NUHS // #
#define DE_SS MINUS // #


/ {

	keymap {
		compatible = "zmk,keymap";

		base_layer {
			bindings = <
				    &kp Q     &kp W          &kp F          &kp P           &kp B              &kp J     &kp L           &kp U          &kp Y          &kp DEL
	    &kp ENTER 	&kp A     &mt LALT R     &mt LGUI S     &mt LCTRL T     &kp G              &kp M     &mt RCTRL N     &mt RGUI E     &mt RALT I     &kp O       &kp BSPC 
				    &kp Z     &kp X          &kp C          &kp D           &kp V              &kp K     &kp H           &kp COMMA      &kp DOT        &kp MINUS
				                                               &sk LSHFT &sl UTIL              &sl SYMNUM &kp SPACE 
			>;
		};

        util_layer {
			bindings = <
				     &kp HOME  &kp PG_DN &kp UP     &kp PG_UP &kp END           &kp DE_ADIA     &kp DE_SS   		&kp LBKT    		&kp RBKT   		&kp DEL
	   &kp ENTER 	&kp TAB   &kp LEFT  &kp DOWN   &kp RIGHT &kp ENTER         &kp DE_ODIA     &mt RCTRL LPAR   &mt RGUI RPAR    	&mt RALT LT     &kp GT       &kp BSPC
				    &kp ESC   &kp PSCRN &kp DEL    &kp BSPC  &kp BSPC           &kp DE_UDIA    &kp LBRC           &kp RBRC      &kp QMARK        &kp EXCL
				                                                    &sk LSHFT &tog UTIL        &tog SYMNUM &kp SPACE 
			>;
		};

        symnum_layer {
			bindings = <
				    &none     &kp DQT      		&kp NUBS     		&kp PIPE   		&none         		   &kp KP_MINUS	&kp N7     &kp N8     &kp N9     &kp KP_SLASH
		&kp ENTER 	&kp APOS  &mt LALT DE_HASH  &mt LGUI FSLH     	&mt LCTRL AT    &kp CARET       	   &kp KP_PLUS  &kp N4     &kp N5     &kp N6     &kp KP_ASTERISK       &kp BSPC
				    &kp PRCNT &kp DLLR     		&kp C        		&kp TILDE  		&kp AMPS    		   &kp N0    	&kp N1     &kp N2 	   &kp N3   &kp KP_EQUAL
				                                    &sk LSHFT &mo 1       				 &mo 2 &kp SPACE 
			>;
		};

		function_layer {
			bindings = <
				    &bt BT_CLR  &bt BT_PRV        &bt BT_NXT         &none     &kp K_VOL_UP            &none    &kp F1     &kp F2     &kp F3     &kp F4
			&none 	&none       &out OUT_BLE      &out OUT_BLE       &none     &kp K_MUTE              &none    &kp F4     &kp F5     &kp F6     &kp F7       &kp F8 
				    &none       &ext_power EP_ON  &ext_power EP_OFF  &none     &kp K_VOL_DN            &none    &kp F9     &kp F10    &kp F11    &kp F12
				                                                    &sk LSHFT &mo 0                              &none &kp SPACE 
			>;
		};

	};
};